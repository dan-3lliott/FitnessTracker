/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fitnesstracker;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author 9632019
 */
public class FitnessTracker extends javax.swing.JFrame {

    /**
     * Creates new form FitnessTracker
     */
    ArrayList<Day> days = new ArrayList<Day>();
    public FitnessTracker() {
        initComponents();
        monthTable.getTableHeader().setReorderingAllowed(false);
        dayTotalTable.getTableHeader().setReorderingAllowed(false);
        dayGoalTable.getTableHeader().setReorderingAllowed(false);
        days.add(new Day(2000, 200));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mealWindow = new javax.swing.JDialog();
        addItem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MealTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        confirmMeal = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        mealName = new javax.swing.JTextField();
        itemWindow = new javax.swing.JDialog();
        itemNameLabel = new javax.swing.JLabel();
        calLabel = new javax.swing.JLabel();
        fatLabel = new javax.swing.JLabel();
        sodiumLabel = new javax.swing.JLabel();
        cholLabel = new javax.swing.JLabel();
        sugarsLabel = new javax.swing.JLabel();
        proteinLabel = new javax.swing.JLabel();
        servingsLabel = new javax.swing.JLabel();
        note = new javax.swing.JLabel();
        sugars = new javax.swing.JTextField();
        protein = new javax.swing.JTextField();
        chol = new javax.swing.JTextField();
        servings = new javax.swing.JTextField();
        fat = new javax.swing.JTextField();
        calories = new javax.swing.JTextField();
        title = new javax.swing.JTextField();
        sodium = new javax.swing.JTextField();
        confirm = new javax.swing.JButton();
        workoutWindow = new javax.swing.JDialog();
        calBurned = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        duration = new javax.swing.JTextField();
        addMealButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        monthTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dayGoalTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        addWorkoutButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        dayTotalTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        mealWindow.setTitle("Add Meal");
        mealWindow.setAlwaysOnTop(true);
        mealWindow.setBounds(new java.awt.Rectangle(0, 0, 600, 415));
        mealWindow.setLocation(new java.awt.Point(0, 0));
        mealWindow.setMaximumSize(new java.awt.Dimension(600, 415));
        mealWindow.setMinimumSize(new java.awt.Dimension(600, 415));
        mealWindow.setPreferredSize(new java.awt.Dimension(600, 415));
        mealWindow.setResizable(false);
        mealWindow.setSize(new java.awt.Dimension(600, 415));

        addItem.setText("Add Item");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });

        jLabel3.setText("Meal Totals");

        MealTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Calories", "Fat (g)", "Sodium (mg)", "Cholesterol (mg)", "Sugars (g)", "Protein (g)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MealTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(MealTable);
        if (MealTable.getColumnModel().getColumnCount() > 0) {
            MealTable.getColumnModel().getColumn(0).setResizable(false);
            MealTable.getColumnModel().getColumn(1).setResizable(false);
            MealTable.getColumnModel().getColumn(2).setResizable(false);
            MealTable.getColumnModel().getColumn(3).setResizable(false);
            MealTable.getColumnModel().getColumn(4).setResizable(false);
            MealTable.getColumnModel().getColumn(5).setResizable(false);
            MealTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel4.setText("NOTE: All values shown are totaled for all servings.");

        confirmMeal.setText("Confirm");
        confirmMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmMealActionPerformed(evt);
            }
        });

        jLabel9.setText("Meal Name:");

        javax.swing.GroupLayout mealWindowLayout = new javax.swing.GroupLayout(mealWindow.getContentPane());
        mealWindow.getContentPane().setLayout(mealWindowLayout);
        mealWindowLayout.setHorizontalGroup(
            mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mealWindowLayout.createSequentialGroup()
                .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mealWindowLayout.createSequentialGroup()
                        .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mealWindowLayout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(jLabel3))
                            .addGroup(mealWindowLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addItem)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mealWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mealWindowLayout.createSequentialGroup()
                                .addComponent(confirmMeal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mealWindowLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mealName, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4))))))
                .addContainerGap())
        );
        mealWindowLayout.setVerticalGroup(
            mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mealWindowLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addItem)
                    .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(mealName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mealWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmMeal)
                    .addComponent(jLabel4))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        itemWindow.setTitle("Add Item");
        itemWindow.setAlwaysOnTop(true);
        itemWindow.setBounds(new java.awt.Rectangle(0, 0, 400, 390));
        itemWindow.setMinimumSize(new java.awt.Dimension(400, 390));
        itemWindow.setResizable(false);

        itemNameLabel.setText("Item Name:");

        calLabel.setText("Calories:");

        fatLabel.setText("Fat (g):");

        sodiumLabel.setText("Sodium (mg):");

        cholLabel.setText("Cholesterol (mg):");

        sugarsLabel.setText("Sugars (g):");

        proteinLabel.setText("Protein (g):");

        servingsLabel.setText("# Servings:");

        note.setText("NOTE: All nutritional values should be per serving.");

        sugars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sugarsActionPerformed(evt);
            }
        });

        protein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proteinActionPerformed(evt);
            }
        });

        chol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cholActionPerformed(evt);
            }
        });

        servings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servingsActionPerformed(evt);
            }
        });

        fat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatActionPerformed(evt);
            }
        });

        calories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caloriesActionPerformed(evt);
            }
        });

        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });

        sodium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sodiumActionPerformed(evt);
            }
        });

        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemWindowLayout = new javax.swing.GroupLayout(itemWindow.getContentPane());
        itemWindow.getContentPane().setLayout(itemWindowLayout);
        itemWindowLayout.setHorizontalGroup(
            itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemNameLabel)
                    .addGroup(itemWindowLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(itemWindowLayout.createSequentialGroup()
                                .addComponent(note)
                                .addGap(18, 18, 18)
                                .addComponent(confirm))
                            .addGroup(itemWindowLayout.createSequentialGroup()
                                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cholLabel)
                                    .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(proteinLabel)
                                        .addComponent(sugarsLabel))
                                    .addComponent(servingsLabel)
                                    .addComponent(sodiumLabel)
                                    .addComponent(fatLabel)
                                    .addComponent(calLabel))
                                .addGap(18, 18, 18)
                                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calories, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fat, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(servings, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sugars, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(protein, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chol, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sodium, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        itemWindowLayout.setVerticalGroup(
            itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemNameLabel)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calLabel)
                    .addComponent(calories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fatLabel)
                    .addComponent(fat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sodiumLabel)
                    .addComponent(sodium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cholLabel)
                    .addComponent(chol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sugarsLabel)
                    .addComponent(sugars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proteinLabel)
                    .addComponent(protein, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servingsLabel)
                    .addComponent(servings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(itemWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(note)
                    .addComponent(confirm))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        workoutWindow.setMinimumSize(new java.awt.Dimension(293, 83));
        workoutWindow.setResizable(false);
        workoutWindow.setSize(new java.awt.Dimension(293, 93));

        calBurned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calBurnedActionPerformed(evt);
            }
        });

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Calories Burned:");

        jLabel8.setText("Duration (hrs):");

        duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout workoutWindowLayout = new javax.swing.GroupLayout(workoutWindow.getContentPane());
        workoutWindow.getContentPane().setLayout(workoutWindowLayout);
        workoutWindowLayout.setHorizontalGroup(
            workoutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workoutWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workoutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workoutWindowLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calBurned, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmButton))
                    .addGroup(workoutWindowLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(duration, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        workoutWindowLayout.setVerticalGroup(
            workoutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workoutWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workoutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(jLabel7)
                    .addComponent(calBurned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(workoutWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        addMealButton.setText("ADD MEAL");
        addMealButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMealButtonActionPerformed(evt);
            }
        });

        monthTable.setAutoCreateRowSorter(true);
        monthTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mon", "Tue", "Wed", "Thurs", "Fri", "Sat", "Sun"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        monthTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(monthTable);
        if (monthTable.getColumnModel().getColumnCount() > 0) {
            monthTable.getColumnModel().getColumn(0).setResizable(false);
            monthTable.getColumnModel().getColumn(1).setResizable(false);
            monthTable.getColumnModel().getColumn(2).setResizable(false);
            monthTable.getColumnModel().getColumn(3).setResizable(false);
            monthTable.getColumnModel().getColumn(4).setResizable(false);
            monthTable.getColumnModel().getColumn(5).setResizable(false);
            monthTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel1.setText("DATE: 03/05/19");

        jLabel2.setText("Monthly Calorie Totals");

        dayGoalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Calories (consumed)", "Fat (g)", "Sodium (mg)", "Cholesterol (mg)", "Sugars (g)", "Protein (g)", "Calories (burned)"
            }
        ));
        jScrollPane3.setViewportView(dayGoalTable);
        if (dayGoalTable.getColumnModel().getColumnCount() > 0) {
            dayGoalTable.getColumnModel().getColumn(0).setResizable(false);
            dayGoalTable.getColumnModel().getColumn(1).setResizable(false);
            dayGoalTable.getColumnModel().getColumn(2).setResizable(false);
            dayGoalTable.getColumnModel().getColumn(3).setResizable(false);
            dayGoalTable.getColumnModel().getColumn(4).setResizable(false);
            dayGoalTable.getColumnModel().getColumn(5).setResizable(false);
            dayGoalTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel5.setText("Daily Totals");

        addWorkoutButton.setText("ADD WORKOUT");
        addWorkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWorkoutButtonActionPerformed(evt);
            }
        });

        dayTotalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Calories (consumed)", "Fat (g)", "Sodium (mg)", "Cholesterol (mg)", "Sugars (g)", "Protein (g)", "Calories (burned)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dayTotalTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(dayTotalTable);
        if (dayTotalTable.getColumnModel().getColumnCount() > 0) {
            dayTotalTable.getColumnModel().getColumn(0).setResizable(false);
            dayTotalTable.getColumnModel().getColumn(1).setResizable(false);
            dayTotalTable.getColumnModel().getColumn(2).setResizable(false);
            dayTotalTable.getColumnModel().getColumn(3).setResizable(false);
            dayTotalTable.getColumnModel().getColumn(4).setResizable(false);
            dayTotalTable.getColumnModel().getColumn(5).setResizable(false);
            dayTotalTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel6.setText("Daily Goals (editable)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(415, 415, 415))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(382, 382, 382))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(137, 137, 137)
                                    .addComponent(jLabel1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(addMealButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(addWorkoutButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(addMealButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addWorkoutButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMealButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMealButtonActionPerformed
        days.get(0).meals.add(new Meal());
        System.out.println("added new meal object");
        mealWindow.setVisible(true);
    }//GEN-LAST:event_addMealButtonActionPerformed

    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
        itemWindow.setVisible(true);
    }//GEN-LAST:event_addItemActionPerformed

    private void sugarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sugarsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sugarsActionPerformed

    private void proteinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proteinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proteinActionPerformed

    private void cholActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cholActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cholActionPerformed

    private void servingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servingsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servingsActionPerformed

    private void fatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatActionPerformed

    private void caloriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caloriesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caloriesActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleActionPerformed

    private void sodiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sodiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sodiumActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        DefaultTableModel mealModel = (DefaultTableModel)MealTable.getModel();
        days.get(0).meals.get(days.get(0).meals.size() - 1).addItem(new Item(Integer.parseInt(calories.getText()), Integer.parseInt(fat.getText()), Integer.parseInt(sodium.getText()), Integer.parseInt(chol.getText()), Integer.parseInt(sugars.getText()), Integer.parseInt(protein.getText()), Integer.parseInt(servings.getText()), title.getText()));
        System.out.println("added item into the meal");
        itemWindow.dispose();
        System.out.println("updating table contents");
        mealModel.addRow(new Object[]{days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getTitle(), days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getCal(), days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getFat(), days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getSodium(), days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getChol(), days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getSugars(), days.get(0).meals.get(days.get(0).meals.size() - 1).items.get(days.get(0).meals.get(days.get(0).meals.size() - 1).items.size() - 1).getProtein()});
        title.setText(null);
        calories.setText(null);
        fat.setText(null);
        sodium.setText(null);
        chol.setText(null);
        sugars.setText(null);
        protein.setText(null);
        servings.setText(null);
    }//GEN-LAST:event_confirmActionPerformed

    private void addWorkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWorkoutButtonActionPerformed
        workoutWindow.setVisible(true);
    }//GEN-LAST:event_addWorkoutButtonActionPerformed

    private void calBurnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calBurnedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calBurnedActionPerformed

    private void durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        days.get(0).addWorkout(Integer.parseInt(duration.getText()), Integer.parseInt(calBurned.getText()));
        System.out.println("added workout to day");
        workoutWindow.dispose();
        calBurned.setText(null);
        duration.setText(null);
        DefaultTableModel dayTotalModel = (DefaultTableModel)dayTotalTable.getModel();
        dayTotalModel.setValueAt(days.get(0).getCalBurned(), dayTotalModel.getRowCount() - 1, 6);
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void confirmMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmMealActionPerformed
        days.get(0).meals.get(days.get(0).meals.size() - 1).setTitle(mealName.getText());
        System.out.println("meal successfully added to the day");
        mealWindow.dispose();
        DefaultTableModel mealModel = (DefaultTableModel)MealTable.getModel();
        mealModel.setRowCount(0);
        mealName.setText(null);
        DefaultTableModel dayTotalModel = (DefaultTableModel)dayTotalTable.getModel();
        dayTotalModel.addRow(new Object[]{days.get(0).meals.get(days.get(0).meals.size() - 1).getCal(), days.get(0).meals.get(days.get(0).meals.size() - 1).getFat(), days.get(0).meals.get(days.get(0).meals.size() - 1).getSodium(), days.get(0).meals.get(days.get(0).meals.size() - 1).getChol(), days.get(0).meals.get(days.get(0).meals.size() - 1).getSugars(), days.get(0).meals.get(days.get(0).meals.size() - 1).getProtein()});     
    }//GEN-LAST:event_confirmMealActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FitnessTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FitnessTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FitnessTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FitnessTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FitnessTracker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MealTable;
    private javax.swing.JButton addItem;
    private javax.swing.JButton addMealButton;
    private javax.swing.JButton addWorkoutButton;
    private javax.swing.JTextField calBurned;
    private javax.swing.JLabel calLabel;
    private javax.swing.JTextField calories;
    private javax.swing.JTextField chol;
    private javax.swing.JLabel cholLabel;
    private javax.swing.JButton confirm;
    private javax.swing.JButton confirmButton;
    private javax.swing.JButton confirmMeal;
    private javax.swing.JTable dayGoalTable;
    private javax.swing.JTable dayTotalTable;
    private javax.swing.JTextField duration;
    private javax.swing.JTextField fat;
    private javax.swing.JLabel fatLabel;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JDialog itemWindow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField mealName;
    private javax.swing.JDialog mealWindow;
    private javax.swing.JTable monthTable;
    private javax.swing.JLabel note;
    private javax.swing.JTextField protein;
    private javax.swing.JLabel proteinLabel;
    private javax.swing.JTextField servings;
    private javax.swing.JLabel servingsLabel;
    private javax.swing.JTextField sodium;
    private javax.swing.JLabel sodiumLabel;
    private javax.swing.JTextField sugars;
    private javax.swing.JLabel sugarsLabel;
    private javax.swing.JTextField title;
    private javax.swing.JDialog workoutWindow;
    // End of variables declaration//GEN-END:variables
}
